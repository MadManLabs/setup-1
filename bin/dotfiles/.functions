#!/usr/bin/env bash

# functions
# --------

# go list packages
function golist() {
    pkgs=$(go list ... | sed 's#.*/##')

    if [[ -z "$1" ]]; then
        echo "${pkgs[@]}"
    else
        echo "${pkgs[@]}" | /usr/bin/env grep "$1"
    fi
}

# upgrade everything on computer
function update() {
    # homebrew
    command -v brew && brew update && brew upgrade && brew prune && brew cleanup

    # node.js
    command -v npm && npm update -g

    # ruby
    command -v gem && gem update "$(gem outdated | cut -d ' ' -f 1)"

    # python
    command -v pip && pip freeze --local | grep -v ^-e | cut -d = -f 1  | xargs pip install -U
    command -v pip && pip install --upgrade pip

    # atom
    command -v apm && apm update
}

# set up default tmux layout: one session, one window, three panes
function mux() {
    s="work"

    if [ -z "$1" ]; then
        s="$1"
    fi

    tmux new-session -s "$s" -d
    tmux split-window -h
    tmux split-window -v
    tmux attach-session -t "$s"
}

# converts quicktime screen recording to a gif
function mov2gif() {
    usage="usage: mov2gif input output"

    if [ -z "$1" ] || [ -z "$2" ]; then
        echo "$usage"
        return 1
    else
        infile="$1"
        outfile="$2"

        if [ -f "$infile" ]; then
            ffmpeg -hide_banner -loglevel quiet -i "$infile" -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > "$outfile"
        else
            echo "error: input is not a file"
            return 1
        fi
    fi
}

# starts a python server, with optional port argument
function server() {
    python -m SimpleHTTPServer "${1:-8080}"
}
