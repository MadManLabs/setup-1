#!/usr/bin/env bash

# bash_prompt
# --------

# colors

reset=$(tput sgr0)
bold=$(tput bold)
blue=$(tput setaf 33)
cyan=$(tput setaf 37)
green=$(tput setaf 64)
orange=$(tput setaf 166)
red=$(tput setaf 124)
violet=$(tput setaf 61)
white=$(tput setaf 15)
yellow=$(tput setaf 136)

# other variables

user_color="${red}"
host_color="${orange}"
dir_color="${yellow}"
branch_color="${green}"
diff_color="${cyan}"

# git diff

function git_untracked() {
    num="$(git status --porcelain 2> /dev/null | grep -c "^??")"

    if [ "$num" -eq 0 ]; then
        return 0
    fi

    return 1
}

function git_ahead() {
    branch="$(git name-rev --name-only HEAD)"
    remote_exists=$(git rev-parse --verify --quiet origin/"$branch")

    if [ "$remote_exists" == "0" ]; then
        num=$(git log origin/"$branch".."$branch" --oneline | wc -l)
        echo "$num"
    fi

    echo 0
}

function git_behind() {
    branch="$(git name-rev --name-only HEAD)"
    remote_exists=$(git rev-parse --verify --quiet origin/"$branch")

    if [ "$remote_exists" == "0" ]; then
        num=$(git log "$branch"..origin/"$branch" --oneline | wc -l)
        echo "$num"
    fi

    echo 0
}

function git_changed() {
    git diff --no-ext-diff --quiet --exit-code &> /dev/null
}

function git_clean() {
    num="$(git status --porcelain 2> /dev/null | wc -l)"

    if [ "$num" -eq 0 ]; then
        return 0
    fi

    return 1
}

function git_staged() {
    num="$(git diff --name-only --cached 2> /dev/null | wc -l)"

    if [ "$num" -eq 0 ]; then
        return 0
    fi

    return 1
}

function git_diff() {
    git rev-parse --git-dir &> /dev/null

    if [ "$?" != "0" ]; then
        return 1
    fi

    diff_prompt=""

    local_prompt=""
    branch_prompt=""

    git_clean

    if [ "$?" == "0" ]; then
        local_prompt+="\xE2\x9C\x93"
    fi

    git_changed

    if [ "$?" == "1" ]; then
        local_prompt+="*"
    fi

    git_untracked

    if [ "$?" == "1" ]; then
        local_prompt+="+"
    fi

    git_staged

    if [ "$?" == "1" ]; then
        local_prompt+="\xE2\x97\x8F"
    fi

    ahead="$(git_ahead | tr -d '[:space:]')"

    if [ "$ahead" != "0" ]; then
        branch_prompt+="↑$ahead"
    fi

    behind="$(git_behind | tr -d '[:space:]')"

    if [ "$behind" != "0" ]; then
        branch_prompt+="↓$behind"
    fi

    if [[ ! ${#branch_prompt} -eq 0 ]]; then
        diff_prompt+="$branch_prompt|$local_prompt"
    else
        diff_prompt+="$local_prompt"
    fi

    if [[ ! ${#diff_prompt} -eq 0 ]]; then
        echo -e "[${diff_prompt}]"
    fi
}

# set prompt

PS1="\[${bold}${user_color}\]\u" # user
PS1+="\[${white}\] at \[${host_color}\]\h" # host
PS1+="\[${white}\] in \[${dir_color}\]\w" # directory
PS1+="\[${branch_color}\]\$(__git_ps1)" # git branch
PS1+=" \[${diff_color}\]\$(git_diff)" # git diff & pushable commits
PS1+="\n\[${blue}\](\$(date +'%I:%M %p')) \[${violet}\]\$\[${reset}\] " # date & prompt

export PS1
