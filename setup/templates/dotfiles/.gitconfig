# gitconfig
#
# defines aliases and settings for git
# --------

[alias]
    # get current commit hash
    head = rev-parse HEAD

    # diff between last commit and current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

    # generate project-specific .gitignore
    ignore = "!f() { curl -L -s https://www.gitignore.io/api/$@ ;}; f"

    # grab .github folder from tylucaskelley/github-templates and fill in repo info
    tpl = "!f() { bash -c \"$(curl -s https://raw.githubusercontent.com/tylucaskelley/github-templates/master/install.sh)\"; }; f"

    # get url for remote origin
    o = "!f() { git remote show origin | grep Fetch | cut -f 5 -d ' '; }; f"

    # better log
    l = log --oneline --decorate --graph --date=relative --abbrev=commit --pretty=format:'%C(yellow)%h%Creset - %s %C(red)%d%Creset %Cgreen(%cr BY %ae)%Creset

    # update master and switch back to previous branch
    up = "!git checkout master && git fetch --prune origin && git rebase origin/master && git checkout -"

    # add all files to stage and commit changes w/ message
    ca = "!f() { [ ! -z \"$1\" ] && git add -A && git commit -m \"$1\"; }; f"

    # switch to branch, create if it doesn't exist
    br = "!f() { git checkout -b \"${1:-master}\" 2> /dev/null || git checkout \"${1:-master}\"; }; f"

    # interactive rebase on a branch, defaults to master
    rb = "!f() { git rebase -i \"${1:-master}\"; }; f"

    # sort contributors by number of commits
    rank = shortlog -sn --no-merges

    # search for text in a git repo
    grep = grep -Ii

    # list branches sorted by edit date
    bl = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

    # change origin
    co = "!f() { git remote set-url origin \"$1\"; }; f"

    # set upstream of <branch> to origin/<branch>
    su = "!f() { git branch --set-upstream-to=origin/\"$1\" \"$1\"; }; f"

    # stash all
    sa = stash save --include-untracked

    # list all user-defined aliases
    a = config --get-regexp '^alias.'
[color]
    # use colors in git commands
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = green
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[core]
    # custom .gitignore and .gitattributes
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes

    # don't ignore case due to case-sensitive imports in some projects
    ignorecase = false

    # catch trailing whitespace & spaces before tabs
    whitespace = space-before-tab,trailing-space

    # make git rebase safer on macos
    trustctime = false
[diff]
    # detect copies and renames
    renames = copies
    mnemonicprefix = true
[help]
    # fix & execute misspelled commands
    autocorrect = 1
[push]
    # use new git push behavior
    default = simple
[filter "lfs"]
    # for github desktop app
    required = true
    process = git-lfs filter-process
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
[user]
    name = Ty-Lucas Kelley
    email = tylucaskelley@gmail.com
